const:
  - &solace tcp://solace:55555
  - &vpn default
  - &conn-user connector
  - &conn-pwd connector
  - &cc-topic solace/dd/STORE-MANGEMENT/fa-assembler/cc/se/fa/assembler/Frankfurt
  - &queue CONN-FILE-DELTA
  - &mgmt-queue CONN-MGMT-FILE-DELTA-SINK

server.port: 8090

spring:
  application:
    name: File Connector (Delta Sink)

  boot.admin.client:
    url: "http://connector-manager:9500/"
    auto-registration: true
    instance:
      # name: "File Connector (Source)"
      # metadata:
        # these credentials will be used for authenticating Connector from Connector Manager
        # user:
        #   name: admin
        #   password: admin
      management-url: http://connector-file-sink:8090/actuator
      service-url: http://connector-file-sink:8090/
    # these credentials are in use to access Connector Manager from Connector
    enabled: true
    username: user
    password: pass

  cloud:
    stream:        
      bindings:
        input-0:
          destination: *queue
          binder: solace
        output-0:
          destination: /incoming
          binder: file

file.sink:
  general:
    adapter_id: SINK_CONN_ID1
    auto_create_directory: 1
    dest_file_name_type: 3  # use 6 to override the output-0 destination
    state_backup_path: ./backup_state.cfg
    clear_state_on_eod: 0  # 0 to disable shutdown at end of day
    eod_time_sec: -1
  sftp_settings:
    enabled: 0
    ip: SFTP_HOST_ADDRESS
    port: 22
    user: SFTP_USER
    password: SFTP_PASSWORD
    strictHostKeyChecking: no
    #privateKeyPath: /home/centos/.ssh/id_rsa
  ftp_settings:
    enabled: 0
    ip: FTP_HOST_ADDRESS
    port: 21
    user: FTP_USER
    password: FTP_PASSWORD
    secured: true
  file_owner_permissions:
    copy_source_file_mode_permissions: 0
    copy_source_file_owner: 0
    override_username: centos
    override_group: centos
  logger:
    flag: 1
  command_center:
    enabled: 0
    heartbeat_enabled: 0
    heartbeat_interval: 3
    solace_base_publish_topic: *cc-topic
    solace_base_publish_topic_heartbeat: *cc-topic
    solace_messaging_mode: PERSISTENT
    useOutputDestinationSolaceCredentials: true

solace:
  connector:
    error:
      handle: stop_all
    workflows:
      0:
        enabled: true
        acknowledgment:
          publish-async: true
    management:
      leader-election:
        mode: standalone  # The connectorâ€™s leader election mode. (values: standalone, active_active, active_standby)
        fail-over:
          max-attempts: 3  # The maximum number of attempts to perform a fail-over.
          back-off-initial-interval: 1000  # The initial interval (milliseconds) to back-off when retrying a fail-over.
          back-off-max-interval: 10000  # The maximum interval (milliseconds) to back-off when retrying a fail-over.
          back-off-multiplier: 2.0  # The multiplier to apply to the back-off interval between each retry of a fail-over.
      queue: *mgmt-queue  # The management queue name.
      session: # The management session. This has the same interface as that used by `solace.java.*`. For more info: https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter#updating-your-application-properties
        host: *solace
        msg-vpn: *vpn
        client-username: *conn-user
        client-password: *conn-pwd
  java:
    host: *solace
    msg-vpn: *vpn
    client-username: *conn-user
    client-password: *conn-pwd
    connectRetries: -1
    reconnectRetries: -1
logging:  # Logging configuration. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging
  level:
    root: WARN
    # com.solace.connector.jms: TRACE # Enables TRACE logs for connector
    # com.solace.connector.core: TRACE # Enables TRACE logs for connector framework
    com.solace.spring.cloud.stream.binder: INFO # Enables TRACE logs for Solace and JMS binders
    com.solacecoe.spring.cloud.stream.binders.file: TRACE # Enables TRACE logs for Solace and JMS binders
  file:
    name: myapp.log  # base log file name
  logback:
    rollingpolicy:  # Logback file rolling policy
      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"  # Pattern for rolled-over log file names. Example: Rolls the log file into an archive once every day. `%i` is reset to `0` at the start of the day.
      max-file-size: 100MB  # The maximum size of log file before it is archived. Example: Within a given day, when the log file reaches 100 MB, archive it, and increment `%i`.
      max-history: 7  # The maximum rotation-period's worth of archive log files to keep. Example: Since the `file-name-pattern` is configured to rollover once every day, keep 7 days worth of log archives.
      total-size-cap: 1GB  # Total size of log backups for a given rotation period. Example: Keep up-to 1 GB of log archives for every day.

management:
  security.enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    logfile:
      external-file: myapp.log
    prometheus:
      enabled: false
    health:
      show-details: ALWAYS
      status:
        # Change default order so that RECONNECTING takes precedence over UP and UNKNOWN
        order:
          - DOWN
          - OUT_OF_SERVICE
          - RECONNECTING
          - UP
          - UNKNOWN
