spring:
  boot.admin.client:
    url: "http://connector-manager:9500/"
    instance:
      name: "IBM MQ Connector"
      metadata:
        # these credentials will be used for authenticating Connector from Connector Manager
        user:
          name: admin
          password: admin
    # these credentials are in use to access Connector Manager from Connector
    username: user
    password: pass

  # parameters defying which config to get and where from.
  # Must be enabled if application relies on Connector Manager's distributed configuration
  # In case operator would like to ignore these parameters, full operator's configuration
  # should be provided locally, withing this configuration file
  application.name: ibm-mq
  config.import: "optional:configserver:http://connector-manager:9500/config/"

  # credentials to connect to the config server and get configuration
  # should be specified here, in operator's configuration as they
  # are intended to be modified by operator
  cloud.config:
    import-check.enabled: true
    username: user
    password: pass
    # this section enables security and TLS for config-server together with the
    # new [BlockingRegistrationClient] used to register application in Connector Manager
    # [BlockingRegistrationClient] should have access to thess fields directly
    # and shoudl be instantieded before Spring Boot Admin native client
    tls:
      enabled: false
      # key-store-type: PKCS12
      # key-store: 'file://connectors/ibmmq-connector/operators-data/keystore/server.p12'
      # key-store-password: configserver
      # key-password: configserver
      # trust-store: 'file:/Library/Java/JavaVirtualMachines/jdk-17.0.3.1.jdk/Contents/Home/lib/security/cacerts'
      # trust-store-type: PKCS12
      # trust-store-password: 'changeit'

# these parameters are necessary to decrypt configuration from the server on the client
# please note that [encrypt.keyStore.location] should point out to the same file used
# for encryption otherwise the value won't be decrypted at all

# encrypt.keyStore:
#   location: "file:security/demo.jks"
#   password: password
#   alias: configserver
#   secret: password

# This section defines service URL used by Connector Manager to back access the Connector
# in case it would be omitted, Connector Manager will try to resolve it, however in case of enabled HTTPS
# it will do it improperly and specify a different port, not related to the [management.server.port] section
# spring.boot.admin.client.instance:
#   service-host-type: ip
#   service-url: 'http://connector-manager:9010/'
#   management-url: 'http://connector-manager:9010/actuator'
#   health-url: 'http://connector-manager:9010/actuator/health'

# This section enables TLS for actuator endpoints used to be accessed from the Connector Manager
# They used to be enabled separately, as they secure only /actuator endpoint access. In case security
# is enabled, operator MUST specify separate port for this endpoint and configure access to it
# within the [spring.boot.admin.client.instance] section
# management:
#   server:
#     # sets a different port to server the actuator endpoint
#     port: 9010
    # if this parameter is present operator must have [enabled] set to false|true
    # otherwise this parameter should be disabled
    #    ssl:

    # if ssl is enabled, all other parameters must also be configured

#      enabled: true
#      protocol: TLSv1.2
#      key-store-type: PKCS12
#      key-store: 'file:./keystore/server.p12'
#      key-store-password: configserver
#      key-password: configserver
#      trust-store: 'file:/Library/Java/JavaVirtualMachines/jdk-17.0.3.1.jdk/Contents/Home/lib/security/cacerts'
#      trust-store-type: PKCS12
#      trust-store-password: 'changeit'
